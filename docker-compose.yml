services:
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - autodealer
        
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:7.2.2
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    networks:
      - kafka
  
  autodealer:
    image: autodealer
    build:
      context: .
      dockerfile: Autodealer/Dockerfile
    restart: always
    ports:
      - "9090:9090"
    networks:
      - autodealer
    links:
      - mongo
    depends_on:
      - mongo
      - redis
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:9090"
    volumes:
      - /path/to/home/.microsoft/usersecrets:/root/.microsoft/usersecrets
      - /path/to/home/.aspnet/https:/root/.aspnet/https
  
  usercore:
    image: usercore
    build:
      context: .
      dockerfile: UserCore/Dockerfile
    ports:
      - "9091:9091"
    networks:
      - autodealer
    depends_on:
      - postgres_user
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:9091"
        
  apigateway:
    image: apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - autodealer
    depends_on:
      - usercore
      - autodealer
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080  
  
  postgres_user:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: Autodealer
    ports:
      - "5432:5432"
    networks:
      - autodealer
    volumes:
      - postgres_data:/var/lib/postgresql/data
        
  mongo:
    image: mongo
    volumes:
      - mongo_data:/data/db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: Autodealer
    networks:
      - autodealer
      
networks:
  kafka:
  autodealer:
    driver: bridge
    
volumes:
  postgres_data:
  mongo_data: